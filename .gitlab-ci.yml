.script:
  script:
    - |
      julia --project=@. -e '
        using Pkg
        Pkg.update()
        Pkg.build()
        Pkg.test(coverage=true)'
.coverage:
  coverage: /Test coverage (\d+\.\d+%)/
  after_script:
    - |
      julia -e '
        using Pkg
        Pkg.add("Coverage")
        using Coverage
        c, t = get_summary(process_folder())
        using Printf
        @printf "Test coverage %.2f%%\n" 100c / t'

.test_template: &test_definition
  # Uncomment below if you would like to run the tests on specific references
  # only, such as the branches `master`, `development`, etc.
  # only:
  #   - master
  #   - development
  script:
    # Let's run the tests. Substitute `coverage = false` below, if you do not
    # want coverage results.
    - timeout 30min julia --project=src -e '
      using Pkg;
      Pkg.develop(PackageSpec(path=pwd()));
      using Damysos'
    - julia --project=src -e '
      using Pkg; 
      Pkg.build("Damysos");
      Pkg.test("Damysos"; coverage = true)'
    # Comment out below if you do not want coverage results.
    - julia -e 'using Pkg; Pkg.add("Coverage"); 
      import Damysos; cd(joinpath(dirname(pathof(Damysos)), ".."));
      using Coverage; cl, tl = get_summary(process_folder());
      println("(", cl/tl*100, "%) covered")'

# Name a test and select an appropriate image.
# images comes from Docker hub
test:1.10:
  image: julia:1.10
  <<: *test_definition



pages:
  image: julia:1.10
  stage: deploy
  script:
    - apt-get update -qq && apt-get install -y git # needed by Documenter
    # - |
    #   julia --project=docs -e '
    #     using Pkg
    #     Pkg.instantiate()
    #     Pkg.develop(PackageSpec(path=pwd()))
    #     using Documenter: doctest
    #     using Damysos
    #     doctest(Damysos)
    #     include("docs/make.jl")'
    # - julia -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate();'  # rebuild Julia (can be put somewhere else I'm sure
    # - julia -e 'using Pkg; using Damysos; Pkg.add("Documenter")'  # install Documenter
    #- julia --project=docs/ -e "using Pkg; Pkg.instantiate()"
    #- julia --project=docs/ docs/make.jl  # make documentation
    - mkdir -p public
    - mv docs/build public/dev
  artifacts:
    paths:
      - public
  only:
    - main
